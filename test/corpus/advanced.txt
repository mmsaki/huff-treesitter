================
Include Statement
================

#include "huffmate/utils/Errors.huff"

---

(source_file
  (control
    (control_include
      path: (string_literal))))

================
Code Table
================

#define table CODE_TABLE {
    0x604260005260206000F3
}

---

(source_file
  (declaration
    (declaration_table
      name: (identifier)
      body: (macro_body
        (number
          (number_hex))))))

================
Error with Parameters
================

#define error PanicError(uint256)
#define error Error(string)

---

(source_file
  (error
    (error_definition
      name: (identifier)
      parameters: (parameter_list
        (parameter_with_modifier
          (interface_primitives)))))
  (error
    (error_definition
      name: (identifier)
      parameters: (parameter_list
        (parameter_with_modifier
          (interface_primitives))))))

================
Builtin Functions
================

__ERROR(PanicError)
__EVENT_HASH(TestEvent)
__FUNC_SIG(myFunction)

---

(source_file
  (builtin_function
    args: (identifier))
  (builtin_function
    args: (identifier))
  (builtin_function
    args: (identifier)))

================
Decorators
================

#[calldata("0x0000000000000000000000000000000000000000000000000000000000000001"), value(0x01)]

---

(source_file
  (decorator
    (decorator_item
      name: (identifier)
      args: (string_literal))
    (decorator_item
      name: (identifier)
      args: (number
        (number_hex)))))

================
Test Definition
================

#define test MY_TEST() = {
    0x00 calldataload
    callvalue
    eq ASSERT()
}

---

(source_file
  (declaration
    (declaration_test
      name: (identifier)
      body: (macro_body
        (number
          (number_hex))
        (macro_call
          name: (identifier))
        (macro_call
          name: (identifier))
        (macro_call
          name: (identifier))
        (macro_call
          name: (identifier))))))

================
Complex Macro with Builtins
================

#define macro PANIC() = takes (1) returns (0) {
    __ERROR(PanicError)
    0x00 mstore
    0x04 mstore
    0x24 0x00 revert
}

---

(source_file
  (declaration
    (declaration_macro
      name: (identifier)
      takes_count: (number_decimal)
      returns_count: (number_decimal)
      (macro_body
        (builtin_function
          args: (identifier))
        (number
          (number_hex))
        (macro_call
          name: (identifier))
        (number
          (number_hex))
        (macro_call
          name: (identifier))
        (number
          (number_hex))
        (number
          (number_hex))
        (macro_call
          name: (identifier))))))

================
Function with Parameter Names and Modifiers
================

#define function transfer(address to, uint256 amount) nonpayable returns (bool success)

---

(source_file
  (interface
    (interface_function
      name: (identifier)
      parameters: (parameter_list
        (parameter_with_modifier
          (interface_primitives)
          name: (identifier))
        (parameter_with_modifier
          (interface_primitives)
          name: (identifier)))
      returns: (parameter_list
        (parameter_with_modifier
          (interface_primitives)
          name: (identifier))))))

================
Simple Event with Name
================

#define event Transfer(address from, uint256 amount)

---

(source_file
  (interface
    (interface_event
      name: (identifier)
      parameters: (parameter_list
        (parameter_with_modifier
          (interface_primitives)
          name: (identifier))
        (parameter_with_modifier
          (interface_primitives)
          name: (identifier))))))